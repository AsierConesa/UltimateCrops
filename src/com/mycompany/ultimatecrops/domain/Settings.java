/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.ultimatecrops.domain;

import com.mycompany.ultimatecrops.domain.manage.ManageSettings;
import com.mycompany.ultimatecrops.view.Main;
import java.sql.Connection;
import java.util.LinkedHashMap;
import java.util.Map;
import org.bukkit.Material;
import org.bukkit.configuration.serialization.ConfigurationSerializable;
import org.bukkit.configuration.serialization.SerializableAs;
/**
 *
 * @author asier
 */

@SerializableAs("Settings")
public class Settings implements ConfigurationSerializable{
   
    public Main plugin;
    public ManageSettings manage;
    Connection conexion = null;
    
    
    //VARIABLES
    private String id;
    private int minutos;
    private Material suelo;
    private int prob2;
    private int prob3;
    private int prob4;
    //CONSTRUCTORS
    
    public Settings(){
    
    }
    
    public Settings(Main plugin){
        this.plugin = plugin;
        
        manage = new ManageSettings(plugin);
    }
    
    public Settings(String id, Main plugin){
        this.plugin = plugin;
        
        manage = new ManageSettings(plugin);
        
        this.id = id;
        this.minutos = 0;
        this.suelo = null;
        this.prob2 = 0;
        this.prob3 = 0;
        this.prob4 = 0;
    }
    
    public Settings(String id, int minutos, Material suelo, int prob2, int prob3, int prob4, Main plugin){
        this.plugin = plugin;
        
        manage = new ManageSettings(plugin);
        
        this.id = id;
        this.minutos = minutos;
        this.suelo = suelo;
        this.prob2 = prob2;
        this.prob3 = prob3;
        this.prob4 = prob4;
    }
    
    public Settings(String id, int minutos, Material suelo, int prob2, int prob3, int prob4){
        this.plugin = Main.getInstance();
        
        manage = new ManageSettings(plugin);
        
        this.id = id;
        this.minutos = minutos;
        this.suelo = suelo;
        this.prob2 = prob2;
        this.prob3 = prob3;
        this.prob4 = prob4;
    }

    //GETTERS AND SETTERS AUTOGENERATED

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public int getMinutos() {
        return minutos;
    }

    public void setMinutos(int minutos) {
        this.minutos = minutos;
    }

    public Material getSuelo() {
        return suelo;
    }

    public void setSuelo(Material suelo) {
        this.suelo = suelo;
    }

    public int getProb2() {
        return prob2;
    }

    public void setProb2(int prob2) {
        this.prob2 = prob2;
    }

    public int getProb3() {
        return prob3;
    }

    public void setProb3(int prob3) {
        this.prob3 = prob3;
    }

    public int getProb4() {
        return prob4;
    }

    public void setProb4(int prob4) {
        this.prob4 = prob4;
    }
    
    //DB METHODS
    public boolean exists(){
        return manage.settingsExists(conexion, this);
    }

    public void insert(){
        manage.insertSettings(conexion, this);
    }
    
    public Settings select(){
        return manage.getSettings(conexion, this);
    }
    
    public boolean delete(){
        return manage.deleteSettings(conexion, this);
    }
    
    public void selectAll(){
        manage.getAllSettings(conexion);
    }
    
    /*
    private String id;
    private int minutos;
    private Material suelo;
    private int prob2;
    private int prob3;
    private int prob4;
    */
    
    // ABSTRACT METHODS
    @Override
    public Map<String, Object> serialize() {
        LinkedHashMap result = new LinkedHashMap();
        result.put("id", this.getId());
        result.put("minutos", this.getMinutos());
        result.put("suelo", this.getSuelo().toString());
        result.put("prob2", this.getProb2());
        result.put("prob3", this.getProb3());
        result.put("prob4", this.getProb4());
        return result;
    }
    
    public static Settings deserialize(Map<String, Object> args) {

        String id = "";
        int minutos = 0;
        String suelo = null;
        int prob2 = 0;
        int prob3 = 0;
        int prob4 = 0;
        
        
        if(args.containsKey("id")){
            id = (String) args.get("id");
        }
        if(args.containsKey("minutos")){
            minutos = (Integer) args.get("minutos");
        }
        if(args.containsKey("suelo")){
            suelo = (String) args.get("suelo");
        }
        if(args.containsKey("prob2")){
            prob2 = (Integer) args.get("prob2");
        }
        if(args.containsKey("prob3")){
            prob3 = (Integer) args.get("prob3");
        }
        if(args.containsKey("prob4")){
            prob4 = (Integer) args.get("prob4");
        }
        return new Settings(id, minutos, Material.getMaterial(suelo), prob2, prob3, prob4);
    }
    
}
